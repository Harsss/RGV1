#Pydantic Schemas for Data Validation
#Just random samples generated by ChatGPT

from pydantic import BaseModel, EmailStr, Field
from typing import Optional
import datetime

class User(BaseModel):
    id: Optional[int] = Field(None, description="The user ID assigned by the database")
    username: str = Field(..., description="The username of the user", min_length=3, max_length=50)
    email: EmailStr = Field(..., description="The email address of the user")
    full_name: Optional[str] = Field(None, description="The full name of the user")
    is_active: bool = Field(True, description="Status to indicate if the user is active")
    is_superuser: bool = Field(False, description="Indicates if the user has administrative privileges")
    joined_at: datetime.datetime = Field(default_factory=datetime.datetime.now, description="The time the user was added")

    class Config:
        orm_mode = True  # Allows the model to work with ORMs by treating the Pydantic models as ORM models.

class InputQuery(BaseModel):
    sessionId:str
    query:str

class sessionId(BaseModel):
    sessionId:str